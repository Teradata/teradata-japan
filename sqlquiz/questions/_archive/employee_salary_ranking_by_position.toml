# IDはユニークな文字列であれば何でも良いが、なるべくこの形式で（たぶん並べ替えやすいので）
qid = "q00000205"

# タグは文字列の配列。なしでもよい。
# タグには言語の区別はなくても良いだろう。
tags = [
  "Window関数", "ROW_NUMBER() OVER()", "COUNT() OVER()", "FIRST_VALUE() OVER()", "LAST_VALUE() OVER()", "QUALIFY句"
]

# カテゴリは必ず１つの文字列。問題の分類に用いる
# 使用できるカテゴリ一覧は別途用意する
# 現在想定しているものは以下（これに含まれないものをアプリ上で表示されないようになっているので、別途アプリ側で追加する必要がある）
#  ja: ("SQL/Teradata 基礎", "SQL/Teradata 中級", "地理空間情報の分析", "時系列情報の分析")
#  en: ("SQL/Teradata Basic", "SQL/Teradata Intermediate", "Geospatial Information Analysis", "Time-series Data")
[category]
ja = "SQL/Teradata 中級"
en = "SQL/Teradata Intermediate"

[title]
ja = """役職ごと給与ランキングの最上位と最下位従業員の取得"""
en = """Retrieve the highest and lowest paid employees in the salary ranking by position"""

[content]
ja = """<em>Terashirt.employee</em> テーブルには、Terashirtの従業員の給与データが含まれています。
各従業員に役職ごとの給与順に一意となる順位を付与し、役職ごとの従業員数を取得した上で、
各役職ごとの給与順位が1位の従業員と最下位の従業員のレコードのみを抽出してください。"""
en = """The <em>Terashirt.employee</em> table contains salary data for Terashirt employees.
After assigning each employee a unique salary rank order by position and retrieving the number of employees per position
extract only the records for the employee with the highest salary rank for each position and the employee with the lowest salary rank for each position."""

# ヒントが不要なら空文字列にする
[hint]
ja = ""
en = ""

# 参考文献、ウェブサイト (HTMLコードを直接書く)
# 不要なら空文字列にする
[references]
ja = """
<ul>
<li><a href="https://docs.teradata.com/r/Teradata-VantageTM-SQL%E9%96%A2%E6%95%B0-%E5%BC%8F-%E3%81%8A%E3%82%88%E3%81%B2%E8%BF%B0%E9%83%A8-17.20/%E9%A0%86%E5%BA%8F%E4%BB%98%E3%81%8D%E5%88%86%E6%9E%90%E9%96%A2%E6%95%B0/%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%88%E3%82%A6%E9%9B%86%E7%B4%84%E9%96%A2%E6%95%B0/ROW_NUMBER" rel="noopener noreferrer" target="_blank">ROW_NUMBER</a>
<li><a href="https://docs.teradata.com/r/Teradata-VantageTM-SQL%E9%96%A2%E6%95%B0-%E5%BC%8F-%E3%81%8A%E3%82%88%E3%81%B2%E8%BF%B0%E9%83%A8-17.20/%E9%A0%86%E5%BA%8F%E4%BB%98%E3%81%8D%E5%88%86%E6%9E%90%E9%96%A2%E6%95%B0/%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%88%E3%82%A6%E9%9B%86%E7%B4%84%E9%96%A2%E6%95%B0/FIRST_VALUE/LAST_VALUE" rel="noopener noreferrer" target="_blank">FIRST_VALUE/LAST_VALUE</a>
<li><a href="https://docs.teradata.com/r/Teradata-VantageTM-SQL%E3%83%86%E3%83%BC%E3%82%BF%E6%93%8D%E4%BD%9C%E8%A8%80%E8%AA%9E-17.20/Select%E6%96%87/QUALIFY%E5%8F%A5" rel="noopener noreferrer" target="_blank">QUALIFY句</a>
</ul>
"""
en = """
<ul>
<li><a href="https://docs.teradata.com/r/Teradata-VantageTM-SQL-Functions-Expressions-and-Predicates-17.20/Ordered-Analytical/Window-Aggregate-Functions/ROW_NUMBER" rel="noopener noreferrer" target="_blank">ROW_NUMBER</a>
<li><a href="https://docs.teradata.com/r/Teradata-VantageTM-SQL-Functions-Expressions-and-Predicates-17.20/Ordered-Analytical/Window-Aggregate-Functions/FIRST_VALUE/LAST_VALUE" rel="noopener noreferrer" target="_blank">FIRST_VALUE/LAST_VALUE</a>
<li><a href="https://docs.teradata.com/r/Teradata-VantageTM-SQL-Data-Manipulation-Language-17.20/SELECT-Statements/QUALIFY-Clause" rel="noopener noreferrer" target="_blank">QUALIFY Clause</a>
</ul>
"""

# 正誤判定に関する定義
[judgement]
check_shape = true  # クエリ結果の行列数の一致を求めるか
shape = [7, 5]      # 想定されたクエリ結果のサイズ

check_type = false         # クエリ結果の列の型の一致を求めるか
types = [ "int", "str" ]   # 想定されたクエリ結果の変数型

check_value = true  # 想定解との値の一致を求めるか
ordered = false     # クエリ結果の並び順が指定されているかどうか
value_from = "query"  # 想定結果の指定方法
                    # csv      : 想定結果のCSV文字列を指定
                    # query    : 想定結果を生成するクエリを指定。動的に実行して判定する

query = """
select
"role"
,employee_id
,salary
,"roleごと給与ランク"
,"roleごと従業員数"
from (
	select
	"role"
	,employee_id
	,salary
	/*給与順に一意な連番*/
	,row_number() over(partition by "role" order by salary desc) as "roleごと給与ランク"
	,count(employee_id) over(partition by "role" ) as "roleごと従業員数"
	,first_value(employee_id) over(partition by "role" order by salary desc rows between unbounded preceding and unbounded following) as "roleごと最上位給与所得者"
	,last_value(employee_id) over(partition by "role" order by salary desc rows between unbounded preceding and unbounded following) as "roleごと最下位給与所得者"
	from employee
	qualify employee_id = "roleごと最上位給与所得者"
	or employee_id = "roleごと最下位給与所得者"
) a1
order by 1,4;
"""

check_explain = false   # クエリのExplain結果に関する条件を課すか
explain_should_include = []      # Explanation が含むべきキーワードのリスト
explain_should_not_include = []  # Explanation が含んではいけないキーワードのリスト