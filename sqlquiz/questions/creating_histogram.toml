# IDはユニークな文字列であれば何でも良いが、なるべくこの形式で（たぶん並べ替えやすいので）
qid = "q00000209"

# タグは文字列の配列。なしでもよい。
# タグには言語の区別はなくても良いだろう。
tags = [
  "width_bucket"
]

# カテゴリは必ず１つの文字列。問題の分類に用いる
# 使用できるカテゴリ一覧は別途用意する
# 現在想定しているものは以下（これに含まれないものをアプリ上で表示されないようになっているので、別途アプリ側で追加する必要がある）
#  ja: ("SQL/Teradata 基礎", "SQL/Teradata 中級", "地理空間情報の分析", "時系列情報の分析")
#  en: ("SQL/Teradata Basic", "SQL/Teradata Intermediate", "Geospatial Information Analysis", "Time-series Data")
[category]
ja = "SQL/Teradata 中級"
en = "SQL/Teradata Intermediate"

[title]
ja = """ヒストグラム"""
en = """Histogram"""

[content]
ja = """<em>Terashirt.store_sales</em> テーブルには、顧客ごとの商品購入履歴データが含まれています。
各顧客ごとに1回あたりの購買における合計金額を算出した上で、購買金額のヒストグラムを階級数を10として作成しようとしています。
このとき、各階級に含まれる度数(データ数)と各階級に含まれる給与額の最小値・最大値を求めてください。
なお、顧客IDがnullのデータは集計対象から除外すること。"""
en = """The <em>Terashirt.store_sales</em> table contains historical product purchase data for each customer.
After calculating the total amount of money spent per purchase for each customer, we want to create a histogram of the amount of money spent, with 10 classes.
In this case, find the minimum and maximum number of frequencies (number of data) included in each class and the minimum and maximum amount of salary included in each class.
Note that data with null customer IDs should be excluded from the total."""

# 参考文献、ウェブサイト (HTMLコードを直接書く)
# 不要なら空文字列にする
[hint]
ja = """
<ul>
<li><a href="https://docs.teradata.com/r/Teradata-VantageTM-SQL%E9%96%A2%E6%95%B0-%E5%BC%8F-%E3%81%8A%E3%82%88%E3%81%B2%E8%BF%B0%E9%83%A8-17.20/%E7%AE%97%E8%A1%93%E6%BC%94%E7%AE%97%E5%AD%90/%E9%96%A2%E6%95%B0-%E4%B8%89%E8%A7%92%E9%96%A2%E6%95%B0-%E5%8F%8C%E6%9B%B2%E7%B7%9A%E9%96%A2%E6%95%B0/WIDTH-BUCKET" rel="noopener noreferrer" target="_blank">WIDTH_BUCKET</a>
</ul>
"""
en = """
<ul>
<li><a href="https://docs.teradata.com/r/Teradata-VantageTM-SQL-Functions-Expressions-and-Predicates-17.20/Arithmetic-Trigonometric-Hyperbolic-Operators/Functions/WIDTH-BUCKET" rel="noopener noreferrer" target="_blank">WIDTH_BUCKET</a>
</ul>
"""

# 正誤判定に関する定義
[judgement]
check_shape = true  # クエリ結果の行列数の一致を求めるか
shape = [9, 4]      # 想定されたクエリ結果のサイズ

check_type = false         # クエリ結果の列の型の一致を求めるか
types = [ "int", "str" ]   # 想定されたクエリ結果の変数型

check_value = true  # 想定解との値の一致を求めるか
ordered = false     # クエリ結果の並び順が指定されているかどうか
value_from = "query"  # 想定結果の指定方法
                    # csv      : 想定結果のCSV文字列を指定
                    # query    : 想定結果を生成するクエリを指定。動的に実行して判定する

query = """
with src0 as (
  select
  customer_id
  ,purchase_date
  ,purchase_timestamp
  ,sum(sales_value) as total_sales_value
  from terashirt.store_sales 
  where customer_id is not null
  group by 1,2,3
)
,src1 as (
  select
  max(total_sales_value)+1 as max_sales_value
  ,min(total_sales_value) as min_sales_value
  ,max_sales_value - min_sales_value as range_sales_value
  ,10 as bucket_num
  from src0
)
,src2 as (
  select
  total_sales_value
  ,width_bucket(total_sales_value, min_sales_value, max_sales_value, bucket_num) as bucket
  ,count(total_sales_value) as cntnum
  from src0
  ,src1
  group by 1  
)
select
bucket
,min(total_sales_value) as lower_sales_value
,max(total_sales_value) as upper_sales_value
,sum(cntnum) as "度数"
from  src2
group by 1
order by 1;
"""

check_explain = false   # クエリのExplain結果に関する条件を課すか
explain_should_include = []      # Explanation が含むべきキーワードのリスト
explain_should_not_include = []  # Explanation が含んではいけないキーワードのリスト