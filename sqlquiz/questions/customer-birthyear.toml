# IDはユニークな文字列であれば何でも良いが、なるべくこの形式で（たぶん並べ替えやすいので）
qid = "q00000120"

# タグは文字列の配列。なしでもよい。
# タグには言語の区別はなくても良いだろう。
tags = [
  "aggregation",
  "conditional-branch",
  "date"
]


# カテゴリは必ず１つの文字列。問題の分類に用いる
# 使用できるカテゴリ一覧は別途用意する
[category]
ja = "SQL/Teradata 基礎"
en = "SQL/Teradata Basic"

[title]
ja = "顧客の誕生年"
en = "The birthyear of customers"

[content]
ja = """<em>TeraShirt.customer</em> テーブルには、TeraShirt社の顧客の情報が格納されています。
顧客の誕生年ごとに人数を集計し、誕生年と人数を表示してください。
ただし、誕生年が欠損している顧客については誕生年を9000としてください。
"""
en = """<em>TeraShirt.customer</em> table stores the information of customers of the TeraShirt company.
Show the birthyear and the number of customers aggregated by the birthyear.
For customers whose birthyear is null, please assume that their birthyear is 9000.
"""


[hint]
ja = ""
en = ""


[references]
ja = ""
en = ""


# 正誤判定に関する定義
[judgement]
check_shape = true         # クエリ結果の行列数の一致を求めるか
shape = [26, 2]            # 想定されたクエリ結果のサイズ

check_type = true          # クエリ結果の列の型の一致を求めるか
types = [ "int", "int" ]         # 想定されたクエリ結果の変数型

check_value = true         # 想定解との値の一致を求めるか
ordered = false            # クエリ結果の並び順が指定されているかどうか
value_from = "csv"         # 想定結果の指定方法
                           # csv      : 想定結果のCSV文字列を指定
                           # query    : 想定結果を生成するクエリを指定。動的に実行して判定する
csv = """
birthyear,count
1973,5
1974,3
1975,5
1976,7
1977,3
1978,3
1979,4
1980,4
1981,4
1982,4
1983,3
1984,6
1985,6
1986,3
1987,2
1988,7
1989,7
1990,2
1991,3
1992,7
1993,2
1994,5
1995,2
1996,4
1997,5
9000,12
"""
query = """
SELECT
  COALESCE(EXTRACT(year FROM birthday), 9000) AS birthyear,
  COUNT(*) AS num_customers
FROM
  Terashirt.customer
GROUP BY 1
"""

check_explain = false